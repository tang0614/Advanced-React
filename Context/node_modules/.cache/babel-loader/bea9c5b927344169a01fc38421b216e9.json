{"ast":null,"code":"var _jsxFileName = \"/Users/xinyutang/Documents/github/Advanced-React/Context/src/themeContext.js\";\nimport React, { Component } from \"react\";\nconst ThemeContext = React.createContext();\nconst {\n  Provider,\n  Consumer\n} = ThemeContext;\n\nclass ThemeContextProvider extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = () => {\n      this.setState(prevState => {\n        return {\n          theme: prevState.theme === \"light\" ? \"dark\" : \"light\"\n        };\n      });\n    };\n\n    this.handleName = name => {\n      this.setState({\n        name\n      });\n    };\n\n    this.state = {\n      theme: \"dark\",\n      name: \"\"\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Provider, {\n      value: {\n        name: this.state.name,\n        onName: this.handleName,\n        theme: this.state.theme,\n        onChange: this.handleChange\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }\n    }, this.props.children);\n  }\n\n}\n\nexport { ThemeContextProvider, Consumer as ThemeContextConsumer, ThemeContext };","map":{"version":3,"sources":["/Users/xinyutang/Documents/github/Advanced-React/Context/src/themeContext.js"],"names":["React","Component","ThemeContext","createContext","Provider","Consumer","ThemeContextProvider","constructor","props","handleChange","setState","prevState","theme","handleName","name","state","render","onName","onChange","children","ThemeContextConsumer"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,MAAMC,YAAY,GAAGF,KAAK,CAACG,aAAN,EAArB;AACA,MAAM;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,IAAyBH,YAA/B;;AAEA,MAAMI,oBAAN,SAAmCL,SAAnC,CAA6C;AAC3CM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAKnBC,YALmB,GAKJ,MAAM;AACnB,WAAKC,QAAL,CAAeC,SAAD,IAAe;AAC3B,eAAO;AACLC,UAAAA,KAAK,EAAED,SAAS,CAACC,KAAV,KAAoB,OAApB,GAA8B,MAA9B,GAAuC;AADzC,SAAP;AAGD,OAJD;AAKD,KAXkB;;AAAA,SAanBC,UAbmB,GAaLC,IAAD,IAAU;AACrB,WAAKJ,QAAL,CAAc;AAAEI,QAAAA;AAAF,OAAd;AACD,KAfkB;;AAEjB,SAAKC,KAAL,GAAa;AAAEH,MAAAA,KAAK,EAAE,MAAT;AAAiBE,MAAAA,IAAI,EAAE;AAAvB,KAAb;AACD;;AAcDE,EAAAA,MAAM,GAAG;AACP,wBACE,oBAAC,QAAD;AACE,MAAA,KAAK,EAAE;AACLF,QAAAA,IAAI,EAAE,KAAKC,KAAL,CAAWD,IADZ;AAELG,QAAAA,MAAM,EAAE,KAAKJ,UAFR;AAGLD,QAAAA,KAAK,EAAE,KAAKG,KAAL,CAAWH,KAHb;AAILM,QAAAA,QAAQ,EAAE,KAAKT;AAJV,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQG,KAAKD,KAAL,CAAWW,QARd,CADF;AAYD;;AA/B0C;;AAkC7C,SAASb,oBAAT,EAA+BD,QAAQ,IAAIe,oBAA3C,EAAiElB,YAAjE","sourcesContent":["import React, { Component } from \"react\";\nconst ThemeContext = React.createContext();\nconst { Provider, Consumer } = ThemeContext;\n\nclass ThemeContextProvider extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { theme: \"dark\", name: \"\" };\n  }\n\n  handleChange = () => {\n    this.setState((prevState) => {\n      return {\n        theme: prevState.theme === \"light\" ? \"dark\" : \"light\",\n      };\n    });\n  };\n\n  handleName = (name) => {\n    this.setState({ name });\n  };\n\n  render() {\n    return (\n      <Provider\n        value={{\n          name: this.state.name,\n          onName: this.handleName,\n          theme: this.state.theme,\n          onChange: this.handleChange,\n        }}\n      >\n        {this.props.children}\n      </Provider>\n    );\n  }\n}\n\nexport { ThemeContextProvider, Consumer as ThemeContextConsumer, ThemeContext };\n"]},"metadata":{},"sourceType":"module"}