{"ast":null,"code":"var _jsxFileName = \"/Users/xinyutang/Documents/github/Advanced-React/Context/src/themeContext.js\";\nimport React, { Component } from \"react\";\nconst ThemeContext = React.createContext();\nconst {\n  Provider,\n  Consumer\n} = ThemeContext;\n\nclass ThemeContextProvider extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      theme: \"dark\",\n      name: \"\"\n    };\n  }\n\n  handleChange() {\n    this.setState(prevState => {\n      return {\n        theme: prevState.theme === \"light\" ? \"dark\" : \"light\"\n      };\n    });\n  }\n\n  handleName(name) {\n    this.setState({\n      name\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Provider, {\n      value: {\n        name: this.state.name,\n        onName: name => {\n          this.handleName(name);\n        },\n        theme: this.state.theme,\n        onChange: () => {\n          this.handleChange();\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }\n    }, this.props.children);\n  }\n\n}\n\nexport { ThemeContextProvider, Consumer as ThemeContextConsumer, ThemeContext };","map":{"version":3,"sources":["/Users/xinyutang/Documents/github/Advanced-React/Context/src/themeContext.js"],"names":["React","Component","ThemeContext","createContext","Provider","Consumer","ThemeContextProvider","constructor","props","state","theme","name","handleChange","setState","prevState","handleName","render","onName","onChange","children","ThemeContextConsumer"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,MAAMC,YAAY,GAAGF,KAAK,CAACG,aAAN,EAArB;AACA,MAAM;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,IAAyBH,YAA/B;;AAEA,MAAMI,oBAAN,SAAmCL,SAAnC,CAA6C;AAC3CM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,KAAK,EAAE,MAAT;AAAiBC,MAAAA,IAAI,EAAE;AAAvB,KAAb;AACD;;AAEDC,EAAAA,YAAY,GAAG;AACb,SAAKC,QAAL,CAAeC,SAAD,IAAe;AAC3B,aAAO;AACLJ,QAAAA,KAAK,EAAEI,SAAS,CAACJ,KAAV,KAAoB,OAApB,GAA8B,MAA9B,GAAuC;AADzC,OAAP;AAGD,KAJD;AAKD;;AAEDK,EAAAA,UAAU,CAACJ,IAAD,EAAO;AACf,SAAKE,QAAL,CAAc;AAAEF,MAAAA;AAAF,KAAd;AACD;;AAEDK,EAAAA,MAAM,GAAG;AACP,wBACE,oBAAC,QAAD;AACE,MAAA,KAAK,EAAE;AACLL,QAAAA,IAAI,EAAE,KAAKF,KAAL,CAAWE,IADZ;AAELM,QAAAA,MAAM,EAAGN,IAAD,IAAU;AAChB,eAAKI,UAAL,CAAgBJ,IAAhB;AACD,SAJI;AAKLD,QAAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,KALb;AAMLQ,QAAAA,QAAQ,EAAE,MAAM;AACd,eAAKN,YAAL;AACD;AARI,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAYG,KAAKJ,KAAL,CAAWW,QAZd,CADF;AAgBD;;AAnC0C;;AAsC7C,SAASb,oBAAT,EAA+BD,QAAQ,IAAIe,oBAA3C,EAAiElB,YAAjE","sourcesContent":["import React, { Component } from \"react\";\nconst ThemeContext = React.createContext();\nconst { Provider, Consumer } = ThemeContext;\n\nclass ThemeContextProvider extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { theme: \"dark\", name: \"\" };\n  }\n\n  handleChange() {\n    this.setState((prevState) => {\n      return {\n        theme: prevState.theme === \"light\" ? \"dark\" : \"light\",\n      };\n    });\n  }\n\n  handleName(name) {\n    this.setState({ name });\n  }\n\n  render() {\n    return (\n      <Provider\n        value={{\n          name: this.state.name,\n          onName: (name) => {\n            this.handleName(name);\n          },\n          theme: this.state.theme,\n          onChange: () => {\n            this.handleChange();\n          },\n        }}\n      >\n        {this.props.children}\n      </Provider>\n    );\n  }\n}\n\nexport { ThemeContextProvider, Consumer as ThemeContextConsumer, ThemeContext };\n"]},"metadata":{},"sourceType":"module"}